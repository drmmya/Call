#!/usr/bin/env bash
set -euo pipefail

# One-click coturn installer (auto mode if args missing)
# Works on Ubuntu 20.04/22.04/24.04
# Usage (no args needed):
#   sudo bash install_turn.sh
# Optional:
#   sudo bash install_turn.sh --ip 1.2.3.4 --user myuser --pass 'MyPass!' --realm turn.example.com --min-port 49160 --max-port 49200

IP=""
USER_NAME=""
USER_PASS=""
REALM="mediaaccess.local"
MIN_PORT="49160"
MAX_PORT="49200"

while [[ $# -gt 0 ]]; do
  case "$1" in
    --ip) IP="$2"; shift 2;;
    --user) USER_NAME="$2"; shift 2;;
    --pass) USER_PASS="$2"; shift 2;;
    --realm) REALM="$2"; shift 2;;
    --min-port) MIN_PORT="$2"; shift 2;;
    --max-port) MAX_PORT="$2"; shift 2;;
    -h|--help)
      echo "Usage: sudo bash $0 [--ip <IP>] [--user <USER>] [--pass <PASS>] [--realm <realm>] [--min-port N] [--max-port N]"
      exit 0;;
    *) echo "[!] Unknown arg: $1"; exit 1;;
  esac
done

if [[ $EUID -ne 0 ]]; then
  echo "[!] Run as root: sudo bash $0"
  exit 1
fi

# --- Auto-detect / Auto-generate if missing ---
if [[ -z "$IP" ]]; then
  IP="$(curl -fsS https://ifconfig.me || true)"
  [[ -z "$IP" ]] && { echo "[!] Could not detect public IP. Pass --ip <IP>"; exit 1; }
fi
if [[ -z "$USER_NAME" ]]; then
  USER_NAME="turn$(date +%s)"
fi
if [[ -z "$USER_PASS" ]]; then
  USER_PASS="$(tr -dc 'A-Za-z0-9' </dev/urandom | head -c 20)"
fi

echo "[*] Using:"
echo "    IP=${IP}"
echo "    USER=${USER_NAME}"
echo "    PASS=${USER_PASS}"
echo "    REALM=${REALM}"
echo "    PORTS: 3478/udp, 5349/tcp (optional), relay UDP ${MIN_PORT}-${MAX_PORT}"

export DEBIAN_FRONTEND=noninteractive
apt-get update -y
apt-get install -y coturn

# Enable service
if [[ -f /etc/default/coturn ]]; then
  sed -i 's/^#\?TURNSERVER_ENABLED=.*/TURNSERVER_ENABLED=1/' /etc/default/coturn || true
else
  echo 'TURNSERVER_ENABLED=1' > /etc/default/coturn
fi

# Write config
CONF=/etc/turnserver.conf
cat >"$CONF" <<EOF
# --- Auto-generated by install_turn.sh ---
listening-port=3478
tls-listening-port=5349
listening-ip=${IP}
# relay-ip=${IP}

fingerprint
lt-cred-mech
realm=${REALM}
user=${USER_NAME}:${USER_PASS}

no-multicast-peers
no-cli
stale-nonce
no-ipv6

total-quota=0
bps-capacity=0
min-port=${MIN_PORT}
max-port=${MAX_PORT}

log-file=/var/log/turnserver.log
simple-log
EOF

# Save credentials for you
CREDS=/root/turn-ice.txt
cat >"$CREDS" <<EOT
TURN IP: ${IP}
USERNAME: ${USER_NAME}
PASSWORD: ${USER_PASS}
REALM: ${REALM}
Ports: 3478/udp, 5349/tcp (optional), relay UDP ${MIN_PORT}-${MAX_PORT}

Android/WebRTC ICE:
  stun:stun.l.google.com:19302
  turn:${IP}:3478?transport=udp  (user=${USER_NAME}, pass=${USER_PASS})
EOT
chmod 600 "$CREDS"

# UFW rules if active
if command -v ufw >/dev/null 2>&1; then
  STATUS=$(ufw status | head -n1 || true)
  echo "[i] UFW: $STATUS"
  if echo "$STATUS" | grep -qi active; then
    ufw allow 3478/udp || true
    ufw allow 5349/tcp || true
    ufw allow ${MIN_PORT}:${MAX_PORT}/udp || true
    ufw reload || true
  else
    echo "[i] UFW inactive. If you enable later, allow:"
    echo "    ufw allow 22/tcp"
    echo "    ufw allow 3478/udp"
    echo "    ufw allow 5349/tcp"
    echo "    ufw allow ${MIN_PORT}:${MAX_PORT}/udp"
  fi
else
  echo "[i] No UFW. If using DO Cloud Firewall, allow:"
  echo "    UDP 3478, UDP ${MIN_PORT}-${MAX_PORT}, (optional) TCP 5349"
fi

systemctl enable coturn
systemctl restart coturn
sleep 1

echo
echo "============================================================"
echo "TURN is ready âœ…"
echo "Config : /etc/turnserver.conf"
echo "Creds  : ${CREDS}"
echo "Logs   : /var/log/turnserver.log"
echo "Service: systemctl status coturn"
echo
echo "Use these ICE servers in your app:"
echo "  stun:stun.l.google.com:19302"
echo "  turn:${IP}:3478?transport=udp  (user=${USER_NAME}, pass=${USER_PASS})"
echo "============================================================"
